name: Next

on:
  push:
    branches:
      - dev

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # - name: Check with flake8
        # run: python -m flake8 crm_yandex/      
      
  build_and_push_to_docker_hub:
    name: Push Docker image to DockerHub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Push backend to DockerHub
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/ya_crm_backend:latest

      # - name: push nginx to Docker Hub
      #   uses: docker/build-push-action@v4
      #   with:
          # context: ./infra
          # file: ./infra/Dockerfile
          # push: true
          # tags: S !!!{{ secrets.DOCKER_USERNAME }}/nginx:latest

  deploy:
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    needs:
      build_and_push_to_docker_hub
    steps:
    - name: checkout repo
      uses: actions/checkout@v3     
    - name: copy docker-compose.yml and nginx.conf via ssh
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        password: ${{ secrets.PASSWORD }}
        source: 'infra/docker-compose.yml'
        target: '~/amba/'
    - name: executing remote ssh command to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        password: ${{ secrets.PASSWORD }}
        script: |
          cd amba/infra/
          sudo docker compose stop
          sudo docker ps -a | grep Exit | cut -d ' ' -f 1 | xargs sudo docker rm
          touch .env
          echo '# Абассадорам, Привет!' | sudo tee .env
          sudo echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
          sudo echo DB_NAME=${{ secrets.DB_NAME }} >> .env
          sudo echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
          sudo echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          sudo echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          sudo echo DB_PORT=${{ secrets.DB_PORT }} >> .env
          sudo echo SECRET_KEY='${{ secrets.SECRET_KEY }}' >> .env
          sudo echo DEBUG='${{ secrets.DEBUG }}' >> .env
          sudo docker rmi ${{ secrets.DOCKER_USERNAME }}/ya_crm_backend
          sudo docker compose up -d


